#!/bin/bash
while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo " "
      echo "options:"
      echo "-I --install, Installs package"
      echo "-S --search, Search for package"
      echo "-R --remove, Removes package"
      echo "-C --change-repo, Chooses repo"
      echo "-U --update, Update script"
      echo "-V --version, Prints pacstall version"
      echo "-L --list, Lists installed packages"
      echo " "
      exit 0
      ;;
    -I|--install) 
      function trap_ctrlc ()
      {
          echo "cleaning up"
          rm -rf /tmp/pacstall/*
	  echo "installation interrupted, removed files"
          exit 2
      }
      trap "trap_ctrlc" 2
      if [ "$EUID" -ne 0 ]
      then echo "Please run as root"
      exit 1
      fi
      if [[ ! -e /tmp/pacstall_lock ]]; then
          echo "you are currently using pacstall or you have interrupted a pacstall instance"
	  echo "if you are running another instance of pacstall, wait for that to complete before trying this again"
	  echo "otherwise, remove /tmp/pacstall_lock"
	  exit 1
      fi
      PACPREFIX="apt install -y"
      PACKAGE=$2
      if [[ ! -e /usr/share/pacstall/repo/ ]]; then
          mkdir -p /usr/share/pacstall/repo
          touch /usr/share/pacstall/repo/pacstallrepo.txt
	  sudo pacstall -C
      fi
      REPO=$(cat /usr/share/pacstall/repo/pacstallrepo.txt)
      RED='\033[0;31m'
      CYAN='\033[0;36m'
      NC='\033[0m' # No Color
      GREEN='\033[0;32m'
      PURPLE='\033[0;35m'
      YELLOW='\033[1;33m'
      BLUE='\033[0;34m'
      BUILDDIR=/tmp/pacstall
      if [ ! -d $BUILDDIR ]; then
	  mkdir -p $BUILDDIR;
      fi

      touch /tmp/pacstall_lock
      sudo rm -rf $BUILDDIR
      sudo mkdir $BUILDDIR
      cd $BUILDDIR || exit
      sudo rm -rf "$PACKAGE"
      URL=https://raw.githubusercontent.com/$REPO/master/packages/$PACKAGE/PACSCRIPT

      if wget -q "$URL" >/dev/null 2>&1 ; then
          cd /tmp/
	  wget -q https://raw.githubusercontent.com/$REPO/master/packages/$PACKAGE/PACSCRIPT
          source PACSCRIPT
	  # LICENSE CHECKER HERE
	  source /usr/share/pacstall/config.conf
	  if [[ $mylicense != $license ]]; then
	  	if [[ $mylicense = ANY ]]; then
			echo " "
		else
			echo "$name breaks your chosen license! Exiting..."
			exit 1
		fi
	  fi
	  echo "checking for conflicting packages"
	  if grep -q $breaks "/var/log/pacstall_installed"; then
	  	echo -e "$name breaks ${RED}$breaks${NC}"
		exit 1
	  fi

	  if [[ $url == *.git ]]; then
	  	echo "detected git"
		cd $BUILDDIR
		git clone $url
	  fi
	  if [[ $url == *.tar.xz ]]; then
	  	echo "detected tar.xz"
		cd $BUILDDIR
		wget -q --show-progress --progress=bar:force:noscroll $url
		if [[ $sha256 != $(sha256sum $pkgname.tar.xz) ]] ; then
			echo "sha256sum's do not match! Do you:
			want to continue (y)
			want to exit (n)
			want to file a bug report (x)"
			read -r sha256unmatch
			if [[ $sha256unmatch = x ]] ; then
				xdg-open 'https://github.com/Henryws/pacstall/issues/new?assignees=&labels=&template=bug_report.md&title=' &
			else
				if [[ $sha256unmatch = n ]] ; then
					exit 1
				fi
			fi
		tar -xf $pkgname.tar.xz
	  fi
	  if [[ $url == *.zip ]]; then
	  	echo "detected zip"
		cd $BUILDDIR
		wget -q --show-progress --progress=bar:force:noscroll $url
		if [[ $sha256 != $(sha256sum $pkgname.zip) ]] ; then
			echo "sha256sum's do not match! Do you:
			want to continue (y)
			want to exit (n)
			want to file a bug report (x)"
			read -r sha256unmatch
			if [[ $sha256unmatch = x ]] ; then
				xdg-open 'https://github.com/Henryws/pacstall/issues/new?assignees=&labels=&template=bug_report.md&title=' &
			else
				if [[ $sha256unmatch = n ]] ; then
					exit 1
				fi
			fi
		unzip $pkgname.zip
	  fi
	  
	  $PACPREFIX $depends
	  cd $pkgname*
	  prepare
	  if [[ $? -eq 1 ]]; then
	  	echo "preparing the package failed"
		exit 1
	  fi
	  build
	  if [[ $? -eq 1 ]]; then
	  	echo "building the package failed"
		exit 1
	  fi
	  install
	  if [[ $? -eq 1 ]]; then
	  	echo "installing the package failed"
		exit 1
	  fi
      echo -e "${GREEN}Cleaning up${NC}"
      echo " "
      cd /tmp
      echo "do you want this to update when you run ${BLUE}sudo pacstall -IU${NC}?" AUTO_UPDATE
      if [[ $AUTO_UPDATE = y ]] ; then
      echo "$name" > /var/cache/pacstall/auto
      fi
      mv PACSCRIPT /var/cache/pacstall/$name-$version
      echo "Indexing..."
      touch /var/log/pacstall_installed/$name
      echo "date=$(date)" >> /var/log/pacstall_installed/$name
      done
      rm -rf /tmp/pacstall_lock
      exit 0
      else
      echo "$PACKAGE does not exist in the $REPO repository. Check your spelling or choose a different repository with ${RED}sudo pacstall -C${NC}"
      exit 1
      fi
      ;;
    -S|--search)
     SEARCH=$2
     REPO=$(cat /usr/share/pacstall/repo/pacstallrepo.txt)
     wget -q --spider https://github.com/"$REPO"/tree/master/packages/$SEARCH/
     if [ $? -eq 0 ]; then
        read -p "${GREEN}$SEARCH${NC} is available in the ${PURPLE}$REPO${NC} repository. Do you want to view the pacscript? " answer
	if [[ $answer = y ]] ; then
	curl https://raw.githubusercontent.com/$REPO/master/packages/$PACKAGE/PACSCRIPT
	exit 0
	else
	exit 0
        fi
     else
        echo "$SEARCH is not available. Add another repo or check your spelling"
	exit 1
     fi
      ;;
    -R|--remove)
      PACKAGE=$2
      sudo rm $(cat /var/lib/porg/$PACKAGE | sed -n 's/|\(.*\)//;/^#\(.*\)/d;p')
      if [ $? -eq 0 ]; then
        echo "Removed $PACKAGE"
	echo "Indexing..."
	rm -rf /var/log/pacstall_installed/$PACKAGE
	rm -rf /var/cache/pacstall/$PACAKGE-APP
	if [ $? -eq 0 ]; then
	  echo "Index successful"
	  exit 0
	else
	  echo "Index failed"
	  exit 1
	fi
	exit 0
      else
        echo "Failed to remove $PACKAGE"
	exit 1
      fi
      ;;
    -C|--change-repo)
      echo "repo changer"
      cmd=(dialog --separate-output --checklist "Select Repository:" 22 76 16)
      options=(1 "Henryws" on    # any option can be set to default to "on"
               2 "Option 2" off
               3 "Option 3" off
               4 "Option 4" off)
      CHOICE=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
      clear
      for choice in $CHOICE
      do
          case $CHOICE in
              1)
                  echo -e "${PURPLE}Henryws${NC} repository selected" && echo Henryws/pacstall-programs > /usr/share/pacstall/repo/pacstallrepo.txt
                  exit
                  ;;
              2)
                  echo "Second Option"
                  ;;
              3)
                  echo "Third Option"
                  ;;
              4)
                  echo "Fourth Option"
                  ;;
          esac
      done
      ;;
    -V|--version)
      COLOR='\e[1;36m'
      NC='\033[0m' # No Color
      echo -e "1.0.4 ${COLOR}Celeste${NC}"
      exit 0
      ;;
    -U|--update)
      sudo wget -q https://raw.githubusercontent.com/Henryws/pacstall/master/pacstall -O /bin/pacstall
      echo "Updating complete"
      echo "You are at version $(pacstall -V)"
      exit 0
      ;;
    -Ud|--update-dev)
      UPDATEBRANCH=1.0.4-Celeste
      sudo pacstall -U
      sudo sed -i 's/master/'"$UPDATEBRANCH"'/g' /bin/pacstall
      exit
      ;;
    -L|--list)
      wc -l /var/log/pacstall_installed
      cat /var/log/pacstall_installed
      exit 0
      ;;
    -Iu|--install-updates)
      BLUE='\033[0;34m'
      NC='\033[0m'
      echo "Scanning ${BLUE}/var/cache/pacstall/auto${NC}"
      sudo pacstall -I $(cat /var/cache/pacstall/auto)
      exit
      ;;
     *)
      pacstall -h
      break
      ;;
  esac
done 
