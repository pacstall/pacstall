#!/bin/bash
while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo " "
      echo "options:"
      echo "-I --install, Installs package"
      echo "-S --search, Search for package"
      echo "-R --remove, Removes package"
      echo "-C --change-repo, Chooses repo"
      echo "-U --update, Update script"
      echo "-V --version, Prints version number"
      echo "-L --list, Lists installed packages"
      echo "-DL --download-local, Downloads to local package"
      echo "-IL --install-local, Installs local package"
      echo " "
      exit 0
      ;;
    -I|--install) 
      function trap_ctrlc ()
      {
          echo "cleaning up"
          rm -rf /tmp/pacstall/*
	  echo "the installation of $2 was interrupted, removed files"
          exit 2
      }
      trap "trap_ctrlc" 2
      if [ "$EUID" -ne 0 ]
      then echo "Please run as root"
      exit 1
      fi
      SUPPORT=$(lsb_release --id --short)
      if [[ $SUPPORT != "Ubuntu" ]] ; then
      	  RED='\033[0;31m'
	  NC='\033[0m'
	  if [[ $SUPPORT != "Fedora" ]] ; then
	  RED='\033[0;31m'
	  NC='\033[0m'  
	  else
	  echo -e "${RED}Unsupported Distribution${NC}"
	  exit 1
	  fi
      fi
      PACKAGE=$2
      if [[ ! -e /usr/share/pacstall/repo/ ]]; then
          mkdir -p /usr/share/pacstall/repo
          touch /usr/share/pacstall/repo/pacstallrepo.txt
	  sudo pacstall -C
      fi
      REPO=$(cat /usr/share/pacstall/repo/pacstallrepo.txt)
      RED='\033[0;31m'
      CYAN='\033[0;36m'
      NC='\033[0m' # No Color
      GREEN='\033[0;32m'
      PURPLE='\033[0;35m'
      YELLOW='\033[1;33m'
      BLUE='\033[0;34m'
      BUILDDIR=/tmp/pacstall
      if [ ! -d $BUILDDIR ]; then
	  mkdir -p $BUILDDIR;
      fi
      #This is the part where it searches your package on all repos and puts it in /tmp
      echo -e "Preparing ${YELLOW}/tmp/pacstall${NC}"
      sudo rm -rf $BUILDDIR
      sudo mkdir $BUILDDIR
      cd $BUILDDIR || exit
      echo "cleaning $PACKAGE build directory"
      sudo rm -rf "$PACKAGE"
      URL=https://raw.githubusercontent.com/$REPO/pacstall/master/packages/$PACKAGE/install.sh
      if wget -q "$URL" >/dev/null 2>&1 ; then

          #Finds package size and prompts for installation
          wget -qO- https://raw.githubusercontent.com/$REPO/pacstall/master/packages/$PACKAGE/alerts.sh | bash
          alertserror=$?
	  if wget -q --spider https://github.com/$REPO/pacstall/raw/master/packages/$PACKAGE/$PACKAGE.tar.xz ; then
          pkgsize=$(curl -s https://github.com/$REPO/pacstall/raw/master/packages/$PACKAGE/$PACKAGE.tar.xz | wc -c)
	      echo "$PACKAGE will take up $pkgsize" && echo " "
          else    
          pkgsize=$(curl -s https://github.com/$REPO/pacstall/raw/master/packages/$PACKAGE/$PACKAGE.zip | wc -c)
	      echo "$PACKAGE will take up $pkgsize" && echo " "
	  fi	  
	  printf 'Proceed to install [y/n] : '
      read -r yesorno
      if [[ "$yesorno" =~ ^([n/N])$ ]] ; then
        exit 0
      fi
      if wget -q --show-progress --progress=bar:force:noscroll https://github.com/$REPO/pacstall/raw/master/packages/$PACKAGE/$PACKAGE.tar.xz ; then
          echo -e "${RED}extracting...${NC}"
          sudo tar -xf "$PACKAGE".tar.xz
      else
          wget -q --show-progress --progress=bar:force:noscroll https://github.com/$REPO/pacstall/raw/master/packages/$PACKAGE/$PACKAGE.zip
          echo -e "${RED}extracting...${NC}"
          sudo unzip $BUILDDIR/$PACKAGE.zip
      fi
      cd $PACKAGE || exit 1
      
      echo "generating dependency list"
      mkdir $BUILDDIR/deps && touch $BUILDDIR/deps/$PACKAGE
      echo $(curl -s https://raw.githubusercontent.com/$REPO/pacstall/master/packages/$PACKAGE/depends) >> $BUILDDIR/deps/$PACKAGE
      DEPNUMBER=1 || echo "depends file not found." && exit 1
      
      for i in $(head -n $DEPNUMBER $BUILDDIR/deps/$PACKAGE);
      do
      echo $(curl -s https://raw.githubusercontent.com/$REPO/pacstall/master/packages/$(head -n $DEPNUMBER $BUILDDIR/deps/$PACKAGE)/depends) >> $BUILDDIR/deps/$PACKAGE
      DEPNUMBER=$((DEPNUMBER+1))
      done
      echo "retrieving packages"
      cp $BUILDDIR/deps/$PACKAGE $BUILDDIR/deps/$PACKAGE-orig
      sed -i -e 's#^#https://raw.githubusercontent.com/'"$REPO"'/''pacstall/master/packages/#' $BUILDDIR/deps/$PACKAGE && sed -i 's/$/.tar.xz/' $BUILDDIR/deps/$PACKAGE
      wget --input-file=$BUILDDIR/deps/$PACKAGE --continue --directory-prefix=$BUILDDIR/deps
      echo $BUILDDIR/deps/$PACKAGE-orig | awk -F'/' '{print $2}' > $BUILDDIR/deps/$PACKAGE-orig
      echo "decompressing files"
      for a in `ls -1 *.tar.xz`; do tar -xf $a; done
      # wget -O- https://raw.githubusercontent.com/$REPO/pacstall/master/packages/$PACKAGE/depends.sh | bash
      DEPNUMBER=1
      for i in $(head -n $DEPNUMBER $BUILDDIR/deps/$PACKAGE-orig);
      do
      cd $(head -n $DEPNUMBER $BUILDDIR/deps/$PACKAGE-orig)
      sudo wget -q https://raw.githubusercontent.com/$REPO/pacstall/master/packages/$(head -n $DEPNUMBER $BUILDDIR/deps/$PACKAGE-orig)/install.sh | bash
      done
      dependserror=$?
      echo -e "${CYAN}downloading and running install script for ${GREEN}$PACKAGE...${NC}"
	  
      wget -O- https://raw.githubusercontent.com/$REPO/pacstall/master/packages/$PACKAGE/install.sh | bash
      installerror=$?
       
      echo -e "${GREEN}Cleaning up${NC}"
      cd $BUILDDIR || exit 1
      rm -rf "$PACKAGE"*
      echo " "
      echo "Checking for any errors"
      if [[ $alertserror = 0 ]]
      then
        echo -e "${GREEN}No errors in alerts.sh${NC}"
      else
      echo -e "${RED}Detected alerts error, this may be that there are no alerts for $PACKAGE, or if there was a syntax error${NC}"
      fi
       
      if [[ $dependserror = 0 ]]
      then
        echo -e "${GREEN}No errors in dependencies${NC}"
      else
        echo -e "${RED}Detected dependency error, if you try to launch $PACKAGE and it works, you can ignore this error, but you may not get all the features of $PACKAGE. If not, contact $PACKAGE maintainer${NC}"
      fi
      
      if [[ $installerror = 0 ]]
      then
        echo -e "${GREEN}No errors in install.sh${NC}"
      else
        echo -e "${RED}Detected installing error, if you try to launch $PACKAGE and it works, you can ignore this error. If not, contact $PACKAGE maintainer${NC}"
      fi
      echo "Indexing..."
      echo "$PACKAGE" >> /var/log/pacstall_installed
      exit 0
      else
      echo "$PACKAGE does not exist in the $REPO repository. Check your spelling or choose a different repository with ${RED}sudo pacstall -C${NC}"
      exit 1
      fi
      ;;
    -S|--search)
     SEARCH=$2
     REPO=$(cat /usr/share/pacstall/repo/pacstallrepo.txt)
     wget -q --spider https://github.com/"$REPO"/pacstall/tree/master/packages/$SEARCH/
     if [ $? -eq 0 ]; then
        read -p "${GREEN}$SEARCH${NC} is available in the ${PURPLE}$REPO${NC} repository. Do you want to view the readme? " answer
	if [[ $answer = y ]] ; then
	pandoc -t plain https://raw.githubusercontent.com/$REPO/pacstall/master/packages/$SEARCH/README.md | less
	exit 0
	else
	exit 0
        fi
     else
        echo "$SEARCH is not available. Add another repo or check your spelling"
	exit 1
     fi
      ;;
    -R|--remove)
      PACKAGE=$2
      sudo rm $(cat /var/lib/porg/$PACKAGE | sed -n 's/|\(.*\)//;/^#\(.*\)/d;p')
      if [ $? -eq 0 ]; then
        echo "Removed $PACKAGE"
	echo "Indexing..."
	sed -i "/\b\($PACKAGE\)\b/d" /var/log/pacstall_installed
	if [ $? -eq 0 ]; then
	  echo "Index successful"
	  exit 0
	else
	  echo "Index failed"
	  exit 1
	fi
	exit 0
      else
        echo "Failed to remove $PACKAGE"
	exit 1
      fi
      ;;
    -C|--change-repo)
      echo "repo changer"
      cmd=(dialog --separate-output --checklist "Select Repository:" 22 76 16)
      options=(1 "Henryws" on    # any option can be set to default to "on"
               2 "Option 2" off
               3 "Option 3" off
               4 "Option 4" off)
      CHOICE=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
      clear
      for choice in $CHOICE
      do
          case $CHOICE in
              1)
                  echo -e "${PURPLE}Henryws${NC} repository selected" && echo Henryws > /usr/share/pacstall/repo/pacstallrepo.txt
                  exit
                  ;;
              2)
                  echo "Second Option"
                  ;;
              3)
                  echo "Third Option"
                  ;;
              4)
                  echo "Fourth Option"
                  ;;
          esac
      done
      ;;
    -V|--version)
      COLOR='\e[0;34m'
      NC='\033[0m' # No Color
      echo -e "version 1.0.3 ${COLOR}Brandeis${NC} Developer"
      exit 0
      ;;
    -U|--update)
      sudo wget -q https://raw.githubusercontent.com/Henryws/pacstall/master/pacstall -O /bin/pacstall
      echo "Updating complete"
      echo "You are at version $(pacstall -V)"
      exit 0
      ;;
    -L|--list)
      wc -l /var/log/pacstall_installed
      cat /var/log/pacstall_installed
      exit 0
      ;;
    -DL|--download-local)
      cd /var/cache/pacstall/
      PACKAGE=$2
      REPO=$(cat /usr/share/pacstall/repo/pacstallrepo.txt)
      if wget -q --show-progress:force:noscroll https://github.com/$REPO/pacstall/raw/master/packages/$PACKAGE/$PACKAGE.tar.xz ; then
      sudo tar -xf $PACKAGE.tar.xz
      cd $PACKAGE
      wget -O- https://raw.githubusercontent.com/$REPO/pacstall/master/packages/$PACKAGE/install.sh
      cd ..
      tar cfJ $PACKAGE.tar.xz $PACKAGE
      if [[ $? -eq 0 ]] ; then
      exit 0
      else
      exit 1
      fi
      else 
      wget -q --show-progress --progress=bar:force:noscroll https://github.com/$REPO/pacstall/raw/master/packages/$PACKAGE/$PACKAGE.zip
      unzip $PACKAGE.zip
      cd $PACKAGE
      wget -O- https://raw.githubusercontent.com/$REPO/pacstall/master/packages/$PACKAGE/install.sh
      cd ..
      tar cfJ $PACKAGE.tar.xz $PACKAGE
      if [[ $? -eq 0 ]] ; then
      exit 0
      else
      exit 1
      fi
      fi
      ;;
    -IL|--install-local)
      PACKAGE=$2
      tar xf $PACKAGE.tar.xz
      cd $PACKAGE
      sudo ./install.sh
      if [[ $? -eq 0 ]] ; then
      exit 0
      else
      echo "Failed to install $PACKAGE"
      exit 1
      fi
      ;;
     *)
      break
      ;;
  esac
done 
